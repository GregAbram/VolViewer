// ======================================================================== //
// Copyright 2009-2015 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#include "ospray/math/vec.ih"
#include "ospray/common/Model.ih"
#include "ospray/camera/Camera.ih"

#include "ospray/fb/FrameBuffer.ih"
#include "ospray/render/util.ih"
#include "ospray/common/Ray.ih"
#include "ospray/render/Renderer.ih"

// path tracer
#include "samplers/PrecomputedSampler.ih"
#include "Scene.ih"

#define MAX_LIGHTS 1000

// to be changed to the ospray image/texture classes, eventually
struct Image;
typedef vec3f (*get_nearest_varying_fct)(uniform Image *uniform image, 
                                         const float u, const float v);
struct Image
{
  vec2ui size;
  get_nearest_varying_fct get_nearest_varying;
};

struct PathTracer {
  uniform Renderer inherited;
  uniform int32 numRays;
  uniform int32 maxDepth;
  uniform float minContribution;
  uniform Image* uniform backplate;
  uniform Scene *uniform scene; /*! iw: since ospray doesn't have the
                                    concept of a 'scene' in the sense
                                    of the original embree path tracer
                                    (it's somewhat related to a
                                    'model', but not just) i'm adding
                                    it here for now; we'll eventually
                                    have to change that with a better
                                    abstraction model for scenes */
};


