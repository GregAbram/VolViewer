// ======================================================================== //
// Copyright 2009-2015 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "ospray/math/vec.ih"

/*! ispc-side equivalent of a light */

struct Light {
  //! Compute the radiance at a point from a sample on the light sans occluders, return the extant light vector and distance.
  varying vec3f (*computeRadiance)(const uniform Light *uniform self, const varying vec3f &coordinates, varying vec3f &direction, varying float &distance);

  //! Pointer back to the C++ equivalent of this class.
  void *uniform cppEquivalent;
};

//! constructor for ispc-side light object
inline void Light_Constructor(uniform Light *uniform self,
                              void *uniform cppEquivalent)
{
  self->cppEquivalent = cppEquivalent;
}
